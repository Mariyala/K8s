#Update
dnf -y upgrade
#disable
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
reboot
#Enable VxLAN
modprobe br_netfilter
#Enable masquerade
firewall-cmd --add-masquerade --permanent
firewall-cmd --reload
Set bridged packets to traverse iptables rules
cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
#new rules.
sysctl --system
#Disable swaps.
swapoff -a
#Hosts
hostnamectl set-hostname k8m1
cat <<EOF>> /etc/hosts
192.168.113.1 k8m1
192.168.113.2 k8n1 
192.168.113.3 k8n2 
192.168.113.4 k8n3 
192.168.113.5 k8n4 
EOF
#Docker
dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
dnf install docker-ce --nobest -y
systemctl start docker && systemctl enable docker

#Kubernetes
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

dnf upgrade -y

dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

systemctl enable kubelet && systemctl start kubelet

#Configuring Kubernetes (master)
kubeadm config images pull
#Open
firewall-cmd --zone=public --permanent --add-port={6443,2379,2380,10250,10251,10252}/tc
firewall-cmd --zone=public --permanent --add-rich-rule 'rule family=ipv4 source address=192.168.113.1/32 accept'
firewall-cmd --zone=public --permanent --add-rich-rule 'rule family=ipv4 source address=172.17.0.0/16 accept'
firewall-cmd --reload


kubeadm init --apiserver-advertise-address 192.168.113.1 --pod-network-cidr 192.168.0.0/16 --service-cidr 192.168.213.0/24

su - user
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

kubectl taint nodes --all node-role.kubernetes.io/master-

kubectl get nodes

#Kubernetes-dashboard
kubectl get nodes

kubectl get pods --all-namespaces

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml

namespace/kubernetes-dashboard created serviceaccount/kubernetes-dashboard created service/kubernetes-dashboard created secret/kubernetes-dashboard-certs created secret/kubernetes-dashboard-csrf created secret/kubernetes-dashboard-key-holder created configmap/kubernetes-dashboard-settings created role.rbac.authorization.k8s.io/kubernetes-dashboard created clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created deployment.apps/kubernetes-dashboard created service/dashboard-metrics-scraper created deployment.apps/dashboard-metrics-scraper created

kubectl get namespace
kubectl describe serviceaccounts
kubectl describe serviceaccount default -n kube-system
kubectl describe secret default-token-5f757 -n kube-system
kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default

#WinX
#Download
https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/windows/amd64/kubectl.exe
#URL
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/

mkdir $HOME/.kube
cd $HOME/.kube
copy (/etc/kubernetes/admin.conf $HOME/.kube/config) to $HOME/.kube
kubectl claster-info
kubectl proxy
